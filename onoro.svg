<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="406" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="389.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="389.00"> </text><svg id="frames" x="10" width="1180" total_samples="474023"><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (113 samples, 0.02%)</title><rect x="0.0177%" y="53" width="0.0238%" height="15" fill="rgb(227,0,7)" fg:x="84" fg:w="113"/><text x="0.2677%" y="63.50"></text></g><g><title>&lt;onoro::onoro_view::ViewMoveGenerator&lt;_,_,_&gt; as abstract_game::game::GameMoveGenerator&gt;::next (421 samples, 0.09%)</title><rect x="0.0416%" y="53" width="0.0888%" height="15" fill="rgb(217,0,24)" fg:x="197" fg:w="421"/><text x="0.2916%" y="63.50"></text></g><g><title>core::hash::BuildHasher::hash_one (79 samples, 0.02%)</title><rect x="0.1310%" y="53" width="0.0167%" height="15" fill="rgb(221,193,54)" fg:x="621" fg:w="79"/><text x="0.3810%" y="63.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (66 samples, 0.01%)</title><rect x="0.1337%" y="37" width="0.0139%" height="15" fill="rgb(248,212,6)" fg:x="634" fg:w="66"/><text x="0.3837%" y="47.50"></text></g><g><title>onoro-rs (820 samples, 0.17%)</title><rect x="0.0000%" y="341" width="0.1730%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="820"/><text x="0.2500%" y="351.50"></text></g><g><title>_start (820 samples, 0.17%)</title><rect x="0.0000%" y="325" width="0.1730%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="820"/><text x="0.2500%" y="335.50"></text></g><g><title>__libc_start_main_impl (820 samples, 0.17%)</title><rect x="0.0000%" y="309" width="0.1730%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="820"/><text x="0.2500%" y="319.50"></text></g><g><title>__libc_start_call_main (820 samples, 0.17%)</title><rect x="0.0000%" y="293" width="0.1730%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="820"/><text x="0.2500%" y="303.50"></text></g><g><title>std::rt::lang_start (820 samples, 0.17%)</title><rect x="0.0000%" y="277" width="0.1730%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="820"/><text x="0.2500%" y="287.50"></text></g><g><title>std::rt::lang_start_internal (820 samples, 0.17%)</title><rect x="0.0000%" y="261" width="0.1730%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="820"/><text x="0.2500%" y="271.50"></text></g><g><title>std::panic::catch_unwind (820 samples, 0.17%)</title><rect x="0.0000%" y="245" width="0.1730%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="820"/><text x="0.2500%" y="255.50"></text></g><g><title>std::panicking::try (820 samples, 0.17%)</title><rect x="0.0000%" y="229" width="0.1730%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="820"/><text x="0.2500%" y="239.50"></text></g><g><title>std::panicking::try::do_call (820 samples, 0.17%)</title><rect x="0.0000%" y="213" width="0.1730%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="820"/><text x="0.2500%" y="223.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (820 samples, 0.17%)</title><rect x="0.0000%" y="197" width="0.1730%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="820"/><text x="0.2500%" y="207.50"></text></g><g><title>std::panic::catch_unwind (820 samples, 0.17%)</title><rect x="0.0000%" y="181" width="0.1730%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="820"/><text x="0.2500%" y="191.50"></text></g><g><title>std::panicking::try (820 samples, 0.17%)</title><rect x="0.0000%" y="165" width="0.1730%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="820"/><text x="0.2500%" y="175.50"></text></g><g><title>std::panicking::try::do_call (820 samples, 0.17%)</title><rect x="0.0000%" y="149" width="0.1730%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="820"/><text x="0.2500%" y="159.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (820 samples, 0.17%)</title><rect x="0.0000%" y="133" width="0.1730%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="820"/><text x="0.2500%" y="143.50"></text></g><g><title>std::rt::lang_start::{{closure}} (820 samples, 0.17%)</title><rect x="0.0000%" y="117" width="0.1730%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="820"/><text x="0.2500%" y="127.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (820 samples, 0.17%)</title><rect x="0.0000%" y="101" width="0.1730%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="820"/><text x="0.2500%" y="111.50"></text></g><g><title>onoro_rs::main (820 samples, 0.17%)</title><rect x="0.0000%" y="85" width="0.1730%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="820"/><text x="0.2500%" y="95.50"></text></g><g><title>cooperate::cooperate::solve_with_hasher (820 samples, 0.17%)</title><rect x="0.0000%" y="69" width="0.1730%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="820"/><text x="0.2500%" y="79.50"></text></g><g><title>onoro::onoro::Onoro&lt;_,_,_&gt;::each_move_gen (71 samples, 0.01%)</title><rect x="0.1580%" y="53" width="0.0150%" height="15" fill="rgb(221,5,38)" fg:x="749" fg:w="71"/><text x="0.4080%" y="63.50"></text></g><g><title>onoro::canonicalize::board_symm_state (307 samples, 0.06%)</title><rect x="1.8537%" y="197" width="0.0648%" height="15" fill="rgb(247,18,42)" fg:x="8787" fg:w="307"/><text x="2.1037%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (1,640 samples, 0.35%)</title><rect x="1.5862%" y="213" width="0.3460%" height="15" fill="rgb(241,131,45)" fg:x="7519" fg:w="1640"/><text x="1.8362%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (65 samples, 0.01%)</title><rect x="1.9185%" y="197" width="0.0137%" height="15" fill="rgb(249,31,29)" fg:x="9094" fg:w="65"/><text x="2.1685%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::ViewMoveGenerator&lt;_,_,_&gt; as abstract_game::game::GameMoveGenerator&gt;::next (43,202 samples, 9.11%)</title><rect x="1.9322%" y="213" width="9.1139%" height="15" fill="rgb(225,111,53)" fg:x="9159" fg:w="43202"/><text x="2.1822%" y="223.50">&lt;onoro::onoro..</text></g><g><title>onoro::canonicalize::board_symm_state (256 samples, 0.05%)</title><rect x="12.0439%" y="181" width="0.0540%" height="15" fill="rgb(238,160,17)" fg:x="57091" fg:w="256"/><text x="12.2939%" y="191.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (3,924 samples, 0.83%)</title><rect x="11.5210%" y="197" width="0.8278%" height="15" fill="rgb(214,148,48)" fg:x="54612" fg:w="3924"/><text x="11.7710%" y="207.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,189 samples, 0.25%)</title><rect x="12.0979%" y="181" width="0.2508%" height="15" fill="rgb(232,36,49)" fg:x="57347" fg:w="1189"/><text x="12.3479%" y="191.50"></text></g><g><title>onoro::canonicalize::board_symm_state (430 samples, 0.09%)</title><rect x="12.3701%" y="181" width="0.0907%" height="15" fill="rgb(209,103,24)" fg:x="58637" fg:w="430"/><text x="12.6201%" y="191.50"></text></g><g><title>onoro::hash::HashTable&lt;_,_,G&gt;::hash (975 samples, 0.21%)</title><rect x="12.4608%" y="181" width="0.2057%" height="15" fill="rgb(229,88,8)" fg:x="59067" fg:w="975"/><text x="12.7108%" y="191.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::get (7,686 samples, 1.62%)</title><rect x="11.0461%" y="213" width="1.6214%" height="15" fill="rgb(213,181,19)" fg:x="52361" fg:w="7686"/><text x="11.2961%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,508 samples, 0.32%)</title><rect x="12.3494%" y="197" width="0.3181%" height="15" fill="rgb(254,191,54)" fg:x="58539" fg:w="1508"/><text x="12.5994%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (547 samples, 0.12%)</title><rect x="12.7498%" y="197" width="0.1154%" height="15" fill="rgb(241,83,37)" fg:x="60437" fg:w="547"/><text x="12.9998%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,117 samples, 0.24%)</title><rect x="12.8673%" y="197" width="0.2356%" height="15" fill="rgb(233,36,39)" fg:x="60994" fg:w="1117"/><text x="13.1173%" y="207.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::update (2,066 samples, 0.44%)</title><rect x="12.6675%" y="213" width="0.4358%" height="15" fill="rgb(226,3,54)" fg:x="60047" fg:w="2066"/><text x="12.9175%" y="223.50"></text></g><g><title>onoro::onoro::Onoro&lt;_,_,_&gt;::adjust_to_new_pawn_and_check_win (3,597 samples, 0.76%)</title><rect x="13.1034%" y="213" width="0.7588%" height="15" fill="rgb(245,192,40)" fg:x="62113" fg:w="3597"/><text x="13.3534%" y="223.50"></text></g><g><title>worker_0 (64,894 samples, 13.69%)</title><rect x="0.1730%" y="341" width="13.6901%" height="15" fill="rgb(238,167,29)" fg:x="820" fg:w="64894"/><text x="0.4230%" y="351.50">worker_0</text></g><g><title>__GI___clone3 (64,894 samples, 13.69%)</title><rect x="0.1730%" y="325" width="13.6901%" height="15" fill="rgb(232,182,51)" fg:x="820" fg:w="64894"/><text x="0.4230%" y="335.50">__GI___clone3</text></g><g><title>start_thread (64,894 samples, 13.69%)</title><rect x="0.1730%" y="309" width="13.6901%" height="15" fill="rgb(231,60,39)" fg:x="820" fg:w="64894"/><text x="0.4230%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (64,894 samples, 13.69%)</title><rect x="0.1730%" y="293" width="13.6901%" height="15" fill="rgb(208,69,12)" fg:x="820" fg:w="64894"/><text x="0.4230%" y="303.50">std::sys::unix::threa..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (64,894 samples, 13.69%)</title><rect x="0.1730%" y="277" width="13.6901%" height="15" fill="rgb(235,93,37)" fg:x="820" fg:w="64894"/><text x="0.4230%" y="287.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (64,894 samples, 13.69%)</title><rect x="0.1730%" y="261" width="13.6901%" height="15" fill="rgb(213,116,39)" fg:x="820" fg:w="64894"/><text x="0.4230%" y="271.50">&lt;alloc::boxed::Box&lt;F,..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (64,894 samples, 13.69%)</title><rect x="0.1730%" y="245" width="13.6901%" height="15" fill="rgb(222,207,29)" fg:x="820" fg:w="64894"/><text x="0.4230%" y="255.50">core::ops::function::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (64,894 samples, 13.69%)</title><rect x="0.1730%" y="229" width="13.6901%" height="15" fill="rgb(206,96,30)" fg:x="820" fg:w="64894"/><text x="0.4230%" y="239.50">std::sys_common::back..</text></g><g><title>onoro::canonicalize::board_symm_state (236 samples, 0.05%)</title><rect x="15.2233%" y="197" width="0.0498%" height="15" fill="rgb(218,138,4)" fg:x="72162" fg:w="236"/><text x="15.4733%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (1,387 samples, 0.29%)</title><rect x="14.9908%" y="213" width="0.2926%" height="15" fill="rgb(250,191,14)" fg:x="71060" fg:w="1387"/><text x="15.2408%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (49 samples, 0.01%)</title><rect x="15.2731%" y="197" width="0.0103%" height="15" fill="rgb(239,60,40)" fg:x="72398" fg:w="49"/><text x="15.5231%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::ViewMoveGenerator&lt;_,_,_&gt; as abstract_game::game::GameMoveGenerator&gt;::next (34,238 samples, 7.22%)</title><rect x="15.2834%" y="213" width="7.2229%" height="15" fill="rgb(206,27,48)" fg:x="72447" fg:w="34238"/><text x="15.5334%" y="223.50">&lt;onoro::on..</text></g><g><title>onoro::canonicalize::board_symm_state (194 samples, 0.04%)</title><rect x="23.2373%" y="181" width="0.0409%" height="15" fill="rgb(225,35,8)" fg:x="110150" fg:w="194"/><text x="23.4873%" y="191.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (2,837 samples, 0.60%)</title><rect x="22.8742%" y="197" width="0.5985%" height="15" fill="rgb(250,213,24)" fg:x="108429" fg:w="2837"/><text x="23.1242%" y="207.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (922 samples, 0.19%)</title><rect x="23.2782%" y="181" width="0.1945%" height="15" fill="rgb(247,123,22)" fg:x="110344" fg:w="922"/><text x="23.5282%" y="191.50"></text></g><g><title>onoro::canonicalize::board_symm_state (332 samples, 0.07%)</title><rect x="23.4915%" y="181" width="0.0700%" height="15" fill="rgb(231,138,38)" fg:x="111355" fg:w="332"/><text x="23.7415%" y="191.50"></text></g><g><title>onoro::hash::HashTable&lt;_,_,G&gt;::hash (746 samples, 0.16%)</title><rect x="23.5615%" y="181" width="0.1574%" height="15" fill="rgb(231,145,46)" fg:x="111687" fg:w="746"/><text x="23.8115%" y="191.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::get (5,753 samples, 1.21%)</title><rect x="22.5063%" y="213" width="1.2137%" height="15" fill="rgb(251,118,11)" fg:x="106685" fg:w="5753"/><text x="22.7563%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,166 samples, 0.25%)</title><rect x="23.4740%" y="197" width="0.2460%" height="15" fill="rgb(217,147,25)" fg:x="111272" fg:w="1166"/><text x="23.7240%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (454 samples, 0.10%)</title><rect x="23.7826%" y="197" width="0.0958%" height="15" fill="rgb(247,81,37)" fg:x="112735" fg:w="454"/><text x="24.0326%" y="207.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::update (2,037 samples, 0.43%)</title><rect x="23.7199%" y="213" width="0.4297%" height="15" fill="rgb(209,12,38)" fg:x="112438" fg:w="2037"/><text x="23.9699%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,277 samples, 0.27%)</title><rect x="23.8803%" y="197" width="0.2694%" height="15" fill="rgb(227,1,9)" fg:x="113198" fg:w="1277"/><text x="24.1303%" y="207.50"></text></g><g><title>onoro::onoro::Onoro&lt;_,_,_&gt;::adjust_to_new_pawn_and_check_win (2,885 samples, 0.61%)</title><rect x="24.1497%" y="213" width="0.6086%" height="15" fill="rgb(248,47,43)" fg:x="114475" fg:w="2885"/><text x="24.3997%" y="223.50"></text></g><g><title>worker_1 (51,648 samples, 10.90%)</title><rect x="13.8630%" y="341" width="10.8957%" height="15" fill="rgb(221,10,30)" fg:x="65714" fg:w="51648"/><text x="14.1130%" y="351.50">worker_1</text></g><g><title>__GI___clone3 (51,648 samples, 10.90%)</title><rect x="13.8630%" y="325" width="10.8957%" height="15" fill="rgb(210,229,1)" fg:x="65714" fg:w="51648"/><text x="14.1130%" y="335.50">__GI___clone3</text></g><g><title>start_thread (51,648 samples, 10.90%)</title><rect x="13.8630%" y="309" width="10.8957%" height="15" fill="rgb(222,148,37)" fg:x="65714" fg:w="51648"/><text x="14.1130%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (51,648 samples, 10.90%)</title><rect x="13.8630%" y="293" width="10.8957%" height="15" fill="rgb(234,67,33)" fg:x="65714" fg:w="51648"/><text x="14.1130%" y="303.50">std::sys::unix::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (51,648 samples, 10.90%)</title><rect x="13.8630%" y="277" width="10.8957%" height="15" fill="rgb(247,98,35)" fg:x="65714" fg:w="51648"/><text x="14.1130%" y="287.50">&lt;alloc::boxed::B..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (51,648 samples, 10.90%)</title><rect x="13.8630%" y="261" width="10.8957%" height="15" fill="rgb(247,138,52)" fg:x="65714" fg:w="51648"/><text x="14.1130%" y="271.50">&lt;alloc::boxed::B..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (51,648 samples, 10.90%)</title><rect x="13.8630%" y="245" width="10.8957%" height="15" fill="rgb(213,79,30)" fg:x="65714" fg:w="51648"/><text x="14.1130%" y="255.50">core::ops::funct..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (51,648 samples, 10.90%)</title><rect x="13.8630%" y="229" width="10.8957%" height="15" fill="rgb(246,177,23)" fg:x="65714" fg:w="51648"/><text x="14.1130%" y="239.50">std::sys_common:..</text></g><g><title>onoro::canonicalize::board_symm_state (328 samples, 0.07%)</title><rect x="26.6909%" y="197" width="0.0692%" height="15" fill="rgb(230,62,27)" fg:x="126521" fg:w="328"/><text x="26.9409%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (1,832 samples, 0.39%)</title><rect x="26.3882%" y="213" width="0.3865%" height="15" fill="rgb(216,154,8)" fg:x="125086" fg:w="1832"/><text x="26.6382%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (69 samples, 0.01%)</title><rect x="26.7601%" y="197" width="0.0146%" height="15" fill="rgb(244,35,45)" fg:x="126849" fg:w="69"/><text x="27.0101%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::ViewMoveGenerator&lt;_,_,_&gt; as abstract_game::game::GameMoveGenerator&gt;::next (48,453 samples, 10.22%)</title><rect x="26.7747%" y="213" width="10.2217%" height="15" fill="rgb(251,115,12)" fg:x="126918" fg:w="48453"/><text x="27.0247%" y="223.50">&lt;onoro::onoro_v..</text></g><g><title>onoro::canonicalize::board_symm_state (266 samples, 0.06%)</title><rect x="38.0766%" y="181" width="0.0561%" height="15" fill="rgb(240,54,50)" fg:x="180492" fg:w="266"/><text x="38.3266%" y="191.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (4,229 samples, 0.89%)</title><rect x="37.5028%" y="197" width="0.8922%" height="15" fill="rgb(233,84,52)" fg:x="177772" fg:w="4229"/><text x="37.7528%" y="207.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,243 samples, 0.26%)</title><rect x="38.1327%" y="181" width="0.2622%" height="15" fill="rgb(207,117,47)" fg:x="180758" fg:w="1243"/><text x="38.3827%" y="191.50"></text></g><g><title>onoro::canonicalize::board_symm_state (504 samples, 0.11%)</title><rect x="38.4152%" y="181" width="0.1063%" height="15" fill="rgb(249,43,39)" fg:x="182097" fg:w="504"/><text x="38.6652%" y="191.50"></text></g><g><title>onoro::hash::HashTable&lt;_,_,G&gt;::hash (990 samples, 0.21%)</title><rect x="38.5215%" y="181" width="0.2089%" height="15" fill="rgb(209,38,44)" fg:x="182601" fg:w="990"/><text x="38.7715%" y="191.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::get (8,225 samples, 1.74%)</title><rect x="36.9963%" y="213" width="1.7351%" height="15" fill="rgb(236,212,23)" fg:x="175371" fg:w="8225"/><text x="37.2463%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,594 samples, 0.34%)</title><rect x="38.3952%" y="197" width="0.3363%" height="15" fill="rgb(242,79,21)" fg:x="182002" fg:w="1594"/><text x="38.6452%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (603 samples, 0.13%)</title><rect x="38.8101%" y="197" width="0.1272%" height="15" fill="rgb(211,96,35)" fg:x="183969" fg:w="603"/><text x="39.0601%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,544 samples, 0.33%)</title><rect x="38.9395%" y="197" width="0.3257%" height="15" fill="rgb(253,215,40)" fg:x="184582" fg:w="1544"/><text x="39.1895%" y="207.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (63 samples, 0.01%)</title><rect x="39.2519%" y="181" width="0.0133%" height="15" fill="rgb(211,81,21)" fg:x="186063" fg:w="63"/><text x="39.5019%" y="191.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::update (2,532 samples, 0.53%)</title><rect x="38.7315%" y="213" width="0.5342%" height="15" fill="rgb(208,190,38)" fg:x="183596" fg:w="2532"/><text x="38.9815%" y="223.50"></text></g><g><title>onoro::onoro::Onoro&lt;_,_,_&gt;::adjust_to_new_pawn_and_check_win (4,044 samples, 0.85%)</title><rect x="39.2658%" y="213" width="0.8531%" height="15" fill="rgb(235,213,38)" fg:x="186129" fg:w="4044"/><text x="39.5158%" y="223.50"></text></g><g><title>worker_2 (72,812 samples, 15.36%)</title><rect x="24.7587%" y="341" width="15.3604%" height="15" fill="rgb(237,122,38)" fg:x="117362" fg:w="72812"/><text x="25.0087%" y="351.50">worker_2</text></g><g><title>__GI___clone3 (72,812 samples, 15.36%)</title><rect x="24.7587%" y="325" width="15.3604%" height="15" fill="rgb(244,218,35)" fg:x="117362" fg:w="72812"/><text x="25.0087%" y="335.50">__GI___clone3</text></g><g><title>start_thread (72,812 samples, 15.36%)</title><rect x="24.7587%" y="309" width="15.3604%" height="15" fill="rgb(240,68,47)" fg:x="117362" fg:w="72812"/><text x="25.0087%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (72,812 samples, 15.36%)</title><rect x="24.7587%" y="293" width="15.3604%" height="15" fill="rgb(210,16,53)" fg:x="117362" fg:w="72812"/><text x="25.0087%" y="303.50">std::sys::unix::thread::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (72,812 samples, 15.36%)</title><rect x="24.7587%" y="277" width="15.3604%" height="15" fill="rgb(235,124,12)" fg:x="117362" fg:w="72812"/><text x="25.0087%" y="287.50">&lt;alloc::boxed::Box&lt;F,A&gt; ..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (72,812 samples, 15.36%)</title><rect x="24.7587%" y="261" width="15.3604%" height="15" fill="rgb(224,169,11)" fg:x="117362" fg:w="72812"/><text x="25.0087%" y="271.50">&lt;alloc::boxed::Box&lt;F,A&gt; ..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (72,812 samples, 15.36%)</title><rect x="24.7587%" y="245" width="15.3604%" height="15" fill="rgb(250,166,2)" fg:x="117362" fg:w="72812"/><text x="25.0087%" y="255.50">core::ops::function::FnO..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (72,812 samples, 15.36%)</title><rect x="24.7587%" y="229" width="15.3604%" height="15" fill="rgb(242,216,29)" fg:x="117362" fg:w="72812"/><text x="25.0087%" y="239.50">std::sys_common::backtra..</text></g><g><title>onoro::canonicalize::board_symm_state (251 samples, 0.05%)</title><rect x="41.4879%" y="197" width="0.0530%" height="15" fill="rgb(230,116,27)" fg:x="196662" fg:w="251"/><text x="41.7379%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (1,306 samples, 0.28%)</title><rect x="41.2739%" y="213" width="0.2755%" height="15" fill="rgb(228,99,48)" fg:x="195648" fg:w="1306"/><text x="41.5239%" y="223.50"></text></g><g><title>&lt;onoro::onoro_view::ViewMoveGenerator&lt;_,_,_&gt; as abstract_game::game::GameMoveGenerator&gt;::next (33,974 samples, 7.17%)</title><rect x="41.5495%" y="213" width="7.1672%" height="15" fill="rgb(253,11,6)" fg:x="196954" fg:w="33974"/><text x="41.7995%" y="223.50">&lt;onoro::on..</text></g><g><title>onoro::canonicalize::board_symm_state (201 samples, 0.04%)</title><rect x="49.5735%" y="181" width="0.0424%" height="15" fill="rgb(247,143,39)" fg:x="234990" fg:w="201"/><text x="49.8235%" y="191.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (3,508 samples, 0.74%)</title><rect x="49.1434%" y="197" width="0.7400%" height="15" fill="rgb(236,97,10)" fg:x="232951" fg:w="3508"/><text x="49.3934%" y="207.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,268 samples, 0.27%)</title><rect x="49.6159%" y="181" width="0.2675%" height="15" fill="rgb(233,208,19)" fg:x="235191" fg:w="1268"/><text x="49.8659%" y="191.50"></text></g><g><title>onoro::canonicalize::board_symm_state (369 samples, 0.08%)</title><rect x="49.9016%" y="181" width="0.0778%" height="15" fill="rgb(216,164,2)" fg:x="236545" fg:w="369"/><text x="50.1516%" y="191.50"></text></g><g><title>onoro::hash::HashTable&lt;_,_,G&gt;::hash (752 samples, 0.16%)</title><rect x="49.9794%" y="181" width="0.1586%" height="15" fill="rgb(220,129,5)" fg:x="236914" fg:w="752"/><text x="50.2294%" y="191.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::get (6,743 samples, 1.42%)</title><rect x="48.7166%" y="213" width="1.4225%" height="15" fill="rgb(242,17,10)" fg:x="230928" fg:w="6743"/><text x="48.9666%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,208 samples, 0.25%)</title><rect x="49.8843%" y="197" width="0.2548%" height="15" fill="rgb(242,107,0)" fg:x="236463" fg:w="1208"/><text x="50.1343%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (420 samples, 0.09%)</title><rect x="50.2109%" y="197" width="0.0886%" height="15" fill="rgb(251,28,31)" fg:x="238011" fg:w="420"/><text x="50.4609%" y="207.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::update (1,899 samples, 0.40%)</title><rect x="50.1391%" y="213" width="0.4006%" height="15" fill="rgb(233,223,10)" fg:x="237671" fg:w="1899"/><text x="50.3891%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,128 samples, 0.24%)</title><rect x="50.3018%" y="197" width="0.2380%" height="15" fill="rgb(215,21,27)" fg:x="238442" fg:w="1128"/><text x="50.5518%" y="207.50"></text></g><g><title>onoro::onoro::Onoro&lt;_,_,_&gt;::adjust_to_new_pawn_and_check_win (2,748 samples, 0.58%)</title><rect x="50.5397%" y="213" width="0.5797%" height="15" fill="rgb(232,23,21)" fg:x="239570" fg:w="2748"/><text x="50.7897%" y="223.50"></text></g><g><title>worker_3 (52,145 samples, 11.00%)</title><rect x="40.1192%" y="341" width="11.0005%" height="15" fill="rgb(244,5,23)" fg:x="190174" fg:w="52145"/><text x="40.3692%" y="351.50">worker_3</text></g><g><title>__GI___clone3 (52,145 samples, 11.00%)</title><rect x="40.1192%" y="325" width="11.0005%" height="15" fill="rgb(226,81,46)" fg:x="190174" fg:w="52145"/><text x="40.3692%" y="335.50">__GI___clone3</text></g><g><title>start_thread (52,145 samples, 11.00%)</title><rect x="40.1192%" y="309" width="11.0005%" height="15" fill="rgb(247,70,30)" fg:x="190174" fg:w="52145"/><text x="40.3692%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (52,145 samples, 11.00%)</title><rect x="40.1192%" y="293" width="11.0005%" height="15" fill="rgb(212,68,19)" fg:x="190174" fg:w="52145"/><text x="40.3692%" y="303.50">std::sys::unix::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (52,145 samples, 11.00%)</title><rect x="40.1192%" y="277" width="11.0005%" height="15" fill="rgb(240,187,13)" fg:x="190174" fg:w="52145"/><text x="40.3692%" y="287.50">&lt;alloc::boxed::B..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (52,145 samples, 11.00%)</title><rect x="40.1192%" y="261" width="11.0005%" height="15" fill="rgb(223,113,26)" fg:x="190174" fg:w="52145"/><text x="40.3692%" y="271.50">&lt;alloc::boxed::B..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (52,145 samples, 11.00%)</title><rect x="40.1192%" y="245" width="11.0005%" height="15" fill="rgb(206,192,2)" fg:x="190174" fg:w="52145"/><text x="40.3692%" y="255.50">core::ops::funct..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (52,145 samples, 11.00%)</title><rect x="40.1192%" y="229" width="11.0005%" height="15" fill="rgb(241,108,4)" fg:x="190174" fg:w="52145"/><text x="40.3692%" y="239.50">std::sys_common:..</text></g><g><title>onoro::canonicalize::board_symm_state (192 samples, 0.04%)</title><rect x="52.2871%" y="197" width="0.0405%" height="15" fill="rgb(247,173,49)" fg:x="247853" fg:w="192"/><text x="52.5371%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (1,140 samples, 0.24%)</title><rect x="52.0964%" y="213" width="0.2405%" height="15" fill="rgb(224,114,35)" fg:x="246949" fg:w="1140"/><text x="52.3464%" y="223.50"></text></g><g><title>&lt;onoro::onoro_view::ViewMoveGenerator&lt;_,_,_&gt; as abstract_game::game::GameMoveGenerator&gt;::next (29,709 samples, 6.27%)</title><rect x="52.3369%" y="213" width="6.2674%" height="15" fill="rgb(245,159,27)" fg:x="248089" fg:w="29709"/><text x="52.5869%" y="223.50">&lt;onoro::..</text></g><g><title>onoro::canonicalize::board_symm_state (185 samples, 0.04%)</title><rect x="59.2853%" y="181" width="0.0390%" height="15" fill="rgb(245,172,44)" fg:x="281026" fg:w="185"/><text x="59.5353%" y="191.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (2,840 samples, 0.60%)</title><rect x="58.9178%" y="197" width="0.5991%" height="15" fill="rgb(236,23,11)" fg:x="279284" fg:w="2840"/><text x="59.1678%" y="207.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (913 samples, 0.19%)</title><rect x="59.3243%" y="181" width="0.1926%" height="15" fill="rgb(205,117,38)" fg:x="281211" fg:w="913"/><text x="59.5743%" y="191.50"></text></g><g><title>onoro::canonicalize::board_symm_state (302 samples, 0.06%)</title><rect x="59.5334%" y="181" width="0.0637%" height="15" fill="rgb(237,72,25)" fg:x="282202" fg:w="302"/><text x="59.7834%" y="191.50"></text></g><g><title>onoro::hash::HashTable&lt;_,_,G&gt;::hash (644 samples, 0.14%)</title><rect x="59.5971%" y="181" width="0.1359%" height="15" fill="rgb(244,70,9)" fg:x="282504" fg:w="644"/><text x="59.8471%" y="191.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::get (5,354 samples, 1.13%)</title><rect x="58.6043%" y="213" width="1.1295%" height="15" fill="rgb(217,125,39)" fg:x="277798" fg:w="5354"/><text x="58.8543%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,022 samples, 0.22%)</title><rect x="59.5182%" y="197" width="0.2156%" height="15" fill="rgb(235,36,10)" fg:x="282130" fg:w="1022"/><text x="59.7682%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (371 samples, 0.08%)</title><rect x="59.7821%" y="197" width="0.0783%" height="15" fill="rgb(251,123,47)" fg:x="283381" fg:w="371"/><text x="60.0321%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,166 samples, 0.25%)</title><rect x="59.8608%" y="197" width="0.2460%" height="15" fill="rgb(221,13,13)" fg:x="283754" fg:w="1166"/><text x="60.1108%" y="207.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::update (1,769 samples, 0.37%)</title><rect x="59.7338%" y="213" width="0.3732%" height="15" fill="rgb(238,131,9)" fg:x="283152" fg:w="1769"/><text x="59.9838%" y="223.50"></text></g><g><title>onoro::onoro::Onoro&lt;_,_,_&gt;::adjust_to_new_pawn_and_check_win (2,435 samples, 0.51%)</title><rect x="60.1072%" y="213" width="0.5137%" height="15" fill="rgb(211,50,8)" fg:x="284922" fg:w="2435"/><text x="60.3572%" y="223.50"></text></g><g><title>worker_4 (45,041 samples, 9.50%)</title><rect x="51.1197%" y="341" width="9.5019%" height="15" fill="rgb(245,182,24)" fg:x="242319" fg:w="45041"/><text x="51.3697%" y="351.50">worker_4</text></g><g><title>__GI___clone3 (45,041 samples, 9.50%)</title><rect x="51.1197%" y="325" width="9.5019%" height="15" fill="rgb(242,14,37)" fg:x="242319" fg:w="45041"/><text x="51.3697%" y="335.50">__GI___clone3</text></g><g><title>start_thread (45,041 samples, 9.50%)</title><rect x="51.1197%" y="309" width="9.5019%" height="15" fill="rgb(246,228,12)" fg:x="242319" fg:w="45041"/><text x="51.3697%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (45,041 samples, 9.50%)</title><rect x="51.1197%" y="293" width="9.5019%" height="15" fill="rgb(213,55,15)" fg:x="242319" fg:w="45041"/><text x="51.3697%" y="303.50">std::sys::unix..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (45,041 samples, 9.50%)</title><rect x="51.1197%" y="277" width="9.5019%" height="15" fill="rgb(209,9,3)" fg:x="242319" fg:w="45041"/><text x="51.3697%" y="287.50">&lt;alloc::boxed:..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (45,041 samples, 9.50%)</title><rect x="51.1197%" y="261" width="9.5019%" height="15" fill="rgb(230,59,30)" fg:x="242319" fg:w="45041"/><text x="51.3697%" y="271.50">&lt;alloc::boxed:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (45,041 samples, 9.50%)</title><rect x="51.1197%" y="245" width="9.5019%" height="15" fill="rgb(209,121,21)" fg:x="242319" fg:w="45041"/><text x="51.3697%" y="255.50">core::ops::fun..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (45,041 samples, 9.50%)</title><rect x="51.1197%" y="229" width="9.5019%" height="15" fill="rgb(220,109,13)" fg:x="242319" fg:w="45041"/><text x="51.3697%" y="239.50">std::sys_commo..</text></g><g><title>onoro::canonicalize::board_symm_state (331 samples, 0.07%)</title><rect x="62.4461%" y="197" width="0.0698%" height="15" fill="rgb(232,18,1)" fg:x="296009" fg:w="331"/><text x="62.6961%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (1,840 samples, 0.39%)</title><rect x="62.1388%" y="213" width="0.3882%" height="15" fill="rgb(215,41,42)" fg:x="294552" fg:w="1840"/><text x="62.3888%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (52 samples, 0.01%)</title><rect x="62.5160%" y="197" width="0.0110%" height="15" fill="rgb(224,123,36)" fg:x="296340" fg:w="52"/><text x="62.7660%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::ViewMoveGenerator&lt;_,_,_&gt; as abstract_game::game::GameMoveGenerator&gt;::next (46,444 samples, 9.80%)</title><rect x="62.5269%" y="213" width="9.7978%" height="15" fill="rgb(240,125,3)" fg:x="296392" fg:w="46444"/><text x="62.7769%" y="223.50">&lt;onoro::onoro_..</text></g><g><title>onoro::canonicalize::board_symm_state (277 samples, 0.06%)</title><rect x="73.3665%" y="181" width="0.0584%" height="15" fill="rgb(205,98,50)" fg:x="347774" fg:w="277"/><text x="73.6165%" y="191.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (4,060 samples, 0.86%)</title><rect x="72.8138%" y="197" width="0.8565%" height="15" fill="rgb(205,185,37)" fg:x="345154" fg:w="4060"/><text x="73.0638%" y="207.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,163 samples, 0.25%)</title><rect x="73.4249%" y="181" width="0.2453%" height="15" fill="rgb(238,207,15)" fg:x="348051" fg:w="1163"/><text x="73.6749%" y="191.50"></text></g><g><title>onoro::canonicalize::board_symm_state (469 samples, 0.10%)</title><rect x="73.6905%" y="181" width="0.0989%" height="15" fill="rgb(213,199,42)" fg:x="349310" fg:w="469"/><text x="73.9405%" y="191.50"></text></g><g><title>onoro::hash::HashTable&lt;_,_,G&gt;::hash (1,020 samples, 0.22%)</title><rect x="73.7895%" y="181" width="0.2152%" height="15" fill="rgb(235,201,11)" fg:x="349779" fg:w="1020"/><text x="74.0395%" y="191.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::get (7,966 samples, 1.68%)</title><rect x="72.3248%" y="213" width="1.6805%" height="15" fill="rgb(207,46,11)" fg:x="342836" fg:w="7966"/><text x="72.5748%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,585 samples, 0.33%)</title><rect x="73.6709%" y="197" width="0.3344%" height="15" fill="rgb(241,35,35)" fg:x="349217" fg:w="1585"/><text x="73.9209%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (592 samples, 0.12%)</title><rect x="74.0890%" y="197" width="0.1249%" height="15" fill="rgb(243,32,47)" fg:x="351199" fg:w="592"/><text x="74.3390%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,389 samples, 0.29%)</title><rect x="74.2158%" y="197" width="0.2930%" height="15" fill="rgb(247,202,23)" fg:x="351800" fg:w="1389"/><text x="74.4658%" y="207.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::update (2,389 samples, 0.50%)</title><rect x="74.0053%" y="213" width="0.5040%" height="15" fill="rgb(219,102,11)" fg:x="350802" fg:w="2389"/><text x="74.2553%" y="223.50"></text></g><g><title>onoro::onoro::Onoro&lt;_,_,_&gt;::adjust_to_new_pawn_and_check_win (3,848 samples, 0.81%)</title><rect x="74.5095%" y="213" width="0.8118%" height="15" fill="rgb(243,110,44)" fg:x="353192" fg:w="3848"/><text x="74.7595%" y="223.50"></text></g><g><title>worker_5 (69,685 samples, 14.70%)</title><rect x="60.6215%" y="341" width="14.7008%" height="15" fill="rgb(222,74,54)" fg:x="287360" fg:w="69685"/><text x="60.8715%" y="351.50">worker_5</text></g><g><title>__GI___clone3 (69,685 samples, 14.70%)</title><rect x="60.6215%" y="325" width="14.7008%" height="15" fill="rgb(216,99,12)" fg:x="287360" fg:w="69685"/><text x="60.8715%" y="335.50">__GI___clone3</text></g><g><title>start_thread (69,685 samples, 14.70%)</title><rect x="60.6215%" y="309" width="14.7008%" height="15" fill="rgb(226,22,26)" fg:x="287360" fg:w="69685"/><text x="60.8715%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (69,685 samples, 14.70%)</title><rect x="60.6215%" y="293" width="14.7008%" height="15" fill="rgb(217,163,10)" fg:x="287360" fg:w="69685"/><text x="60.8715%" y="303.50">std::sys::unix::thread..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,685 samples, 14.70%)</title><rect x="60.6215%" y="277" width="14.7008%" height="15" fill="rgb(213,25,53)" fg:x="287360" fg:w="69685"/><text x="60.8715%" y="287.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (69,685 samples, 14.70%)</title><rect x="60.6215%" y="261" width="14.7008%" height="15" fill="rgb(252,105,26)" fg:x="287360" fg:w="69685"/><text x="60.8715%" y="271.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (69,685 samples, 14.70%)</title><rect x="60.6215%" y="245" width="14.7008%" height="15" fill="rgb(220,39,43)" fg:x="287360" fg:w="69685"/><text x="60.8715%" y="255.50">core::ops::function::F..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (69,685 samples, 14.70%)</title><rect x="60.6215%" y="229" width="14.7008%" height="15" fill="rgb(229,68,48)" fg:x="287360" fg:w="69685"/><text x="60.8715%" y="239.50">std::sys_common::backt..</text></g><g><title>onoro::canonicalize::board_symm_state (272 samples, 0.06%)</title><rect x="76.8334%" y="197" width="0.0574%" height="15" fill="rgb(252,8,32)" fg:x="364208" fg:w="272"/><text x="77.0834%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (1,495 samples, 0.32%)</title><rect x="76.5870%" y="213" width="0.3154%" height="15" fill="rgb(223,20,43)" fg:x="363040" fg:w="1495"/><text x="76.8370%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (55 samples, 0.01%)</title><rect x="76.8908%" y="197" width="0.0116%" height="15" fill="rgb(229,81,49)" fg:x="364480" fg:w="55"/><text x="77.1408%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::ViewMoveGenerator&lt;_,_,_&gt; as abstract_game::game::GameMoveGenerator&gt;::next (39,203 samples, 8.27%)</title><rect x="76.9024%" y="213" width="8.2703%" height="15" fill="rgb(236,28,36)" fg:x="364535" fg:w="39203"/><text x="77.1524%" y="223.50">&lt;onoro::onor..</text></g><g><title>onoro::canonicalize::board_symm_state (203 samples, 0.04%)</title><rect x="86.0789%" y="181" width="0.0428%" height="15" fill="rgb(249,185,26)" fg:x="408034" fg:w="203"/><text x="86.3289%" y="191.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (3,623 samples, 0.76%)</title><rect x="85.6231%" y="197" width="0.7643%" height="15" fill="rgb(249,174,33)" fg:x="405873" fg:w="3623"/><text x="85.8731%" y="207.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,259 samples, 0.27%)</title><rect x="86.1218%" y="181" width="0.2656%" height="15" fill="rgb(233,201,37)" fg:x="408237" fg:w="1259"/><text x="86.3718%" y="191.50"></text></g><g><title>onoro::canonicalize::board_symm_state (389 samples, 0.08%)</title><rect x="86.4057%" y="181" width="0.0821%" height="15" fill="rgb(221,78,26)" fg:x="409583" fg:w="389"/><text x="86.6557%" y="191.50"></text></g><g><title>onoro::hash::HashTable&lt;_,_,G&gt;::hash (889 samples, 0.19%)</title><rect x="86.4878%" y="181" width="0.1875%" height="15" fill="rgb(250,127,30)" fg:x="409972" fg:w="889"/><text x="86.7378%" y="191.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::get (7,125 samples, 1.50%)</title><rect x="85.1727%" y="213" width="1.5031%" height="15" fill="rgb(230,49,44)" fg:x="403738" fg:w="7125"/><text x="85.4227%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,360 samples, 0.29%)</title><rect x="86.3888%" y="197" width="0.2869%" height="15" fill="rgb(229,67,23)" fg:x="409503" fg:w="1360"/><text x="86.6388%" y="207.50"></text></g><g><title>onoro::canonicalize::board_symm_state (48 samples, 0.01%)</title><rect x="86.8479%" y="181" width="0.0101%" height="15" fill="rgb(249,83,47)" fg:x="411679" fg:w="48"/><text x="87.0979%" y="191.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (509 samples, 0.11%)</title><rect x="86.7523%" y="197" width="0.1074%" height="15" fill="rgb(215,43,3)" fg:x="411226" fg:w="509"/><text x="87.0023%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,029 samples, 0.22%)</title><rect x="86.8614%" y="197" width="0.2171%" height="15" fill="rgb(238,154,13)" fg:x="411743" fg:w="1029"/><text x="87.1114%" y="207.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::update (1,910 samples, 0.40%)</title><rect x="86.6758%" y="213" width="0.4029%" height="15" fill="rgb(219,56,2)" fg:x="410863" fg:w="1910"/><text x="86.9258%" y="223.50"></text></g><g><title>onoro::onoro::Onoro&lt;_,_,_&gt;::adjust_to_new_pawn_and_check_win (3,287 samples, 0.69%)</title><rect x="87.0789%" y="213" width="0.6934%" height="15" fill="rgb(233,0,4)" fg:x="412774" fg:w="3287"/><text x="87.3289%" y="223.50"></text></g><g><title>worker_6 (59,018 samples, 12.45%)</title><rect x="75.3223%" y="341" width="12.4505%" height="15" fill="rgb(235,30,7)" fg:x="357045" fg:w="59018"/><text x="75.5723%" y="351.50">worker_6</text></g><g><title>__GI___clone3 (59,018 samples, 12.45%)</title><rect x="75.3223%" y="325" width="12.4505%" height="15" fill="rgb(250,79,13)" fg:x="357045" fg:w="59018"/><text x="75.5723%" y="335.50">__GI___clone3</text></g><g><title>start_thread (59,018 samples, 12.45%)</title><rect x="75.3223%" y="309" width="12.4505%" height="15" fill="rgb(211,146,34)" fg:x="357045" fg:w="59018"/><text x="75.5723%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (59,018 samples, 12.45%)</title><rect x="75.3223%" y="293" width="12.4505%" height="15" fill="rgb(228,22,38)" fg:x="357045" fg:w="59018"/><text x="75.5723%" y="303.50">std::sys::unix::thr..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (59,018 samples, 12.45%)</title><rect x="75.3223%" y="277" width="12.4505%" height="15" fill="rgb(235,168,5)" fg:x="357045" fg:w="59018"/><text x="75.5723%" y="287.50">&lt;alloc::boxed::Box&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (59,018 samples, 12.45%)</title><rect x="75.3223%" y="261" width="12.4505%" height="15" fill="rgb(221,155,16)" fg:x="357045" fg:w="59018"/><text x="75.5723%" y="271.50">&lt;alloc::boxed::Box&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (59,018 samples, 12.45%)</title><rect x="75.3223%" y="245" width="12.4505%" height="15" fill="rgb(215,215,53)" fg:x="357045" fg:w="59018"/><text x="75.5723%" y="255.50">core::ops::function..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (59,018 samples, 12.45%)</title><rect x="75.3223%" y="229" width="12.4505%" height="15" fill="rgb(223,4,10)" fg:x="357045" fg:w="59018"/><text x="75.5723%" y="239.50">std::sys_common::ba..</text></g><g><title>onoro::canonicalize::board_symm_state (248 samples, 0.05%)</title><rect x="89.2632%" y="197" width="0.0523%" height="15" fill="rgb(234,103,6)" fg:x="423128" fg:w="248"/><text x="89.5132%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (1,369 samples, 0.29%)</title><rect x="89.0377%" y="213" width="0.2888%" height="15" fill="rgb(227,97,0)" fg:x="422059" fg:w="1369"/><text x="89.2877%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (52 samples, 0.01%)</title><rect x="89.3155%" y="197" width="0.0110%" height="15" fill="rgb(234,150,53)" fg:x="423376" fg:w="52"/><text x="89.5655%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::ViewMoveGenerator&lt;_,_,_&gt; as abstract_game::game::GameMoveGenerator&gt;::next (38,720 samples, 8.17%)</title><rect x="89.3265%" y="213" width="8.1684%" height="15" fill="rgb(228,201,54)" fg:x="423428" fg:w="38720"/><text x="89.5765%" y="223.50">&lt;onoro::ono..</text></g><g><title>onoro::canonicalize::board_symm_state (230 samples, 0.05%)</title><rect x="98.3756%" y="181" width="0.0485%" height="15" fill="rgb(222,22,37)" fg:x="466323" fg:w="230"/><text x="98.6256%" y="191.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (3,519 samples, 0.74%)</title><rect x="97.9170%" y="197" width="0.7424%" height="15" fill="rgb(237,53,32)" fg:x="464149" fg:w="3519"/><text x="98.1670%" y="207.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,115 samples, 0.24%)</title><rect x="98.4241%" y="181" width="0.2352%" height="15" fill="rgb(233,25,53)" fg:x="466553" fg:w="1115"/><text x="98.6741%" y="191.50"></text></g><g><title>onoro::canonicalize::board_symm_state (415 samples, 0.09%)</title><rect x="98.6815%" y="181" width="0.0875%" height="15" fill="rgb(210,40,34)" fg:x="467773" fg:w="415"/><text x="98.9315%" y="191.50"></text></g><g><title>onoro::hash::HashTable&lt;_,_,G&gt;::hash (884 samples, 0.19%)</title><rect x="98.7690%" y="181" width="0.1865%" height="15" fill="rgb(241,220,44)" fg:x="468188" fg:w="884"/><text x="99.0190%" y="191.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::get (6,929 samples, 1.46%)</title><rect x="97.4948%" y="213" width="1.4617%" height="15" fill="rgb(235,28,35)" fg:x="462148" fg:w="6929"/><text x="97.7448%" y="223.50"></text></g><g><title>onoro::onoro_view::OnoroView&lt;_,_,_&gt;::maybe_initialize_canonical_view (1,404 samples, 0.30%)</title><rect x="98.6604%" y="197" width="0.2962%" height="15" fill="rgb(210,56,17)" fg:x="467673" fg:w="1404"/><text x="98.9104%" y="207.50"></text></g><g><title>&lt;onoro::onoro_view::OnoroView&lt;_,_,_&gt; as core::cmp::PartialEq&gt;::eq (483 samples, 0.10%)</title><rect x="99.0283%" y="197" width="0.1019%" height="15" fill="rgb(224,130,29)" fg:x="469417" fg:w="483"/><text x="99.2783%" y="207.50"></text></g><g><title>cooperate::table::Table&lt;G,H&gt;::update (1,753 samples, 0.37%)</title><rect x="98.9566%" y="213" width="0.3698%" height="15" fill="rgb(235,212,8)" fg:x="469077" fg:w="1753"/><text x="99.2066%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (921 samples, 0.19%)</title><rect x="99.1321%" y="197" width="0.1943%" height="15" fill="rgb(223,33,50)" fg:x="469909" fg:w="921"/><text x="99.3821%" y="207.50"></text></g><g><title>onoro::onoro::Onoro&lt;_,_,_&gt;::adjust_to_new_pawn_and_check_win (3,190 samples, 0.67%)</title><rect x="99.3266%" y="213" width="0.6730%" height="15" fill="rgb(219,149,13)" fg:x="470831" fg:w="3190"/><text x="99.5766%" y="223.50"></text></g><g><title>all (474,023 samples, 100%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(250,156,29)" fg:x="0" fg:w="474023"/><text x="0.2500%" y="367.50"></text></g><g><title>worker_7 (57,960 samples, 12.23%)</title><rect x="87.7727%" y="341" width="12.2273%" height="15" fill="rgb(216,193,19)" fg:x="416063" fg:w="57960"/><text x="88.0227%" y="351.50">worker_7</text></g><g><title>__GI___clone3 (57,960 samples, 12.23%)</title><rect x="87.7727%" y="325" width="12.2273%" height="15" fill="rgb(216,135,14)" fg:x="416063" fg:w="57960"/><text x="88.0227%" y="335.50">__GI___clone3</text></g><g><title>start_thread (57,960 samples, 12.23%)</title><rect x="87.7727%" y="309" width="12.2273%" height="15" fill="rgb(241,47,5)" fg:x="416063" fg:w="57960"/><text x="88.0227%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (57,960 samples, 12.23%)</title><rect x="87.7727%" y="293" width="12.2273%" height="15" fill="rgb(233,42,35)" fg:x="416063" fg:w="57960"/><text x="88.0227%" y="303.50">std::sys::unix::th..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (57,960 samples, 12.23%)</title><rect x="87.7727%" y="277" width="12.2273%" height="15" fill="rgb(231,13,6)" fg:x="416063" fg:w="57960"/><text x="88.0227%" y="287.50">&lt;alloc::boxed::Box..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (57,960 samples, 12.23%)</title><rect x="87.7727%" y="261" width="12.2273%" height="15" fill="rgb(207,181,40)" fg:x="416063" fg:w="57960"/><text x="88.0227%" y="271.50">&lt;alloc::boxed::Box..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (57,960 samples, 12.23%)</title><rect x="87.7727%" y="245" width="12.2273%" height="15" fill="rgb(254,173,49)" fg:x="416063" fg:w="57960"/><text x="88.0227%" y="255.50">core::ops::functio..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (57,960 samples, 12.23%)</title><rect x="87.7727%" y="229" width="12.2273%" height="15" fill="rgb(221,1,38)" fg:x="416063" fg:w="57960"/><text x="88.0227%" y="239.50">std::sys_common::b..</text></g></svg></svg>